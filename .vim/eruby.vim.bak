" Vim syntax file
" Language:     Ruby
" Maintainer:   Mirko Nasato
" Last Change:  2001 May 10
" Location:     http://altern.org/mn/eruby/eruby.vim

" See http://altern.org/mn/eruby/vim.html for documentation.
" Thanks to perl.vim authors, and to Reimer Behrends. :-)

" For version 5.x: Clear all syntax items
" For version 6.x: Quit when a syntax file was already loaded
if version < 600
  syntax clear
elseif exists("b:current_syntax")
  finish
endif

if !exists("main_syntax")
  let main_syntax = 'eruby'
endif

if version < 600
  so <sfile>:p:h/html.vim
else
  runtime! syntax/html.vim
  unlet b:current_syntax
endif

syn cluster htmlPreproc add=erubyRegion,erubyDoubleString

syn cluster erubyTop contains=@erubyInside,erubyDefine,erubyParentError,erubyStorageClass,erubyDocumentation

syn cluster erubyInside contains=erubyDefine,erubyFunction,erubyControl,erubyInclude,erubyNumber,erubyBoolean,erubyException,erubyClassOrModule,erubyIdentifier,erubySharpBang,erubyString,erubyStringDelimit,erubyExprSubst,erubyComment

syn region phpRegion    keepend matchgroup=Delimiter start="<%\(=\)\=" skip=+".\{-}?>.\{-}"\|'.\{-}?>.\{-}'\|/\*.\{-}?>.\{-}\*/+ end="%>" contains=@erubyTop

" Expression Substitution: and Backslash Notation
syn match   erubyExprSubst  "\\\\\|\(\(\\M-\\C-\|\\c\|\\C-\|\\M-\)\w\)\|\(\\\o\{3}\|\\x\x\{2}\|\\[tnrfbaes]\)" contained
syn match   erubyExprSubst  "#{[^}]*}" contained
syn match   erubyExprSubst  "#[$@]\w\+" contained

" Numbers: and ASCII Codes
syn match   erubyNumber  "\<\(0x\x\+\|0b[01]\+\|0\o\+\|0\.\d\+\|0\|[1-9][\.0-9_]*\)\>"
syn match   erubyNumber  "?\(\\M-\\C-\|\\c\|\\C-\|\\M-\)\=\(\\\o\{3}\|\\x\x\{2}\|\\\=\w\)"

" Special Identifiers: instance, global, symbol, iterator, predefined
if !exists("eruby_no_identifiers")
  syn match   erubyIdentifier  "\<\u\w*"
  syn match   erubyIdentifier  "@\h\w*"
  syn match   erubyIdentifier  "$\h\w*"
  syn match   erubyIdentifier  "\s:\h\w*"
  syn match   erubyIdentifier  "|[ ,a-zA-Z0-9_*]\+|"
  syn match   erubyIdentifier  "$[\\\"/:'&`+*.,;=~!?@$<>0-9]"
  syn match   erubyIdentifier  "$-[0adFiIlpv]"
endif

"
" BEGIN Autogenerated Stuff (Ruby script @ http://altern.org/mn/eruby/vimregions.rb)
"
" Generalized Regular Expression:
syn region erubyString matchgroup=erubyStringDelimit start="%r!" end="![iopx]*" skip="\\\\\|\\!" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\"" end="\"[iopx]*" skip="\\\\\|\\\"" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r#" end="#[iopx]*" skip="\\\\\|\\#" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\$" end="\$[iopx]*" skip="\\\\\|\\\$" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r%" end="%[iopx]*" skip="\\\\\|\\%" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r&" end="&[iopx]*" skip="\\\\\|\\&" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r'" end="'[iopx]*" skip="\\\\\|\\'" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\*" end="\*[iopx]*" skip="\\\\\|\\\*" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r+" end="+[iopx]*" skip="\\\\\|\\+" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r-" end="-[iopx]*" skip="\\\\\|\\-" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\." end="\.[iopx]*" skip="\\\\\|\\\." contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r/" end="/[iopx]*" skip="\\\\\|\\/" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r:" end=":[iopx]*" skip="\\\\\|\\:" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r;" end=";[iopx]*" skip="\\\\\|\\;" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r=" end="=[iopx]*" skip="\\\\\|\\=" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r?" end="?[iopx]*" skip="\\\\\|\\?" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r@" end="@[iopx]*" skip="\\\\\|\\@" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\\" end="\\[iopx]*"  contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\^" end="\^[iopx]*" skip="\\\\\|\\\^" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r`" end="`[iopx]*" skip="\\\\\|\\`" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r|" end="|[iopx]*" skip="\\\\\|\\|" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\~" end="\~[iopx]*" skip="\\\\\|\\\~" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r{" end="}[iopx]*" skip="\\\\\|\\}" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r<" end=">[iopx]*" skip="\\\\\|\\>" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r\[" end="\][iopx]*" skip="\\\\\|\\\]" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%r(" end=")[iopx]*" skip="\\\\\|\\)" contains=erubyExprSubst

" Generalized Single Quoted String and Array of Strings:
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]!" end="!" skip="\\\\\|\\!"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\"" end="\"" skip="\\\\\|\\\""
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]#" end="#" skip="\\\\\|\\#"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\$" end="\$" skip="\\\\\|\\\$"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]%" end="%" skip="\\\\\|\\%"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]&" end="&" skip="\\\\\|\\&"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]'" end="'" skip="\\\\\|\\'"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\*" end="\*" skip="\\\\\|\\\*"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]+" end="+" skip="\\\\\|\\+"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]-" end="-" skip="\\\\\|\\-"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\." end="\." skip="\\\\\|\\\."
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]/" end="/" skip="\\\\\|\\/"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]:" end=":" skip="\\\\\|\\:"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq];" end=";" skip="\\\\\|\\;"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]=" end="=" skip="\\\\\|\\="
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]?" end="?" skip="\\\\\|\\?"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]@" end="@" skip="\\\\\|\\@"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\\" end="\\"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\^" end="\^" skip="\\\\\|\\\^"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]`" end="`" skip="\\\\\|\\`"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]|" end="|" skip="\\\\\|\\|"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\~" end="\~" skip="\\\\\|\\\~"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]{" end="}" skip="\\\\\|\\}"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]<" end=">" skip="\\\\\|\\>"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq]\[" end="\]" skip="\\\\\|\\\]"
syn region erubyString matchgroup=erubyStringDelimit start="%[wq](" end=")" skip="\\\\\|\\)"

" Generalized Double Quoted String and Shell Command Output:
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=!" end="!" skip="\\\\\|\\!" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\"" end="\"" skip="\\\\\|\\\"" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=#" end="#" skip="\\\\\|\\#" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\$" end="\$" skip="\\\\\|\\\$" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=%" end="%" skip="\\\\\|\\%" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=&" end="&" skip="\\\\\|\\&" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\='" end="'" skip="\\\\\|\\'" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\*" end="\*" skip="\\\\\|\\\*" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=+" end="+" skip="\\\\\|\\+" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=-" end="-" skip="\\\\\|\\-" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\." end="\." skip="\\\\\|\\\." contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=/" end="/" skip="\\\\\|\\/" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=:" end=":" skip="\\\\\|\\:" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=;" end=";" skip="\\\\\|\\;" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\==" end="=" skip="\\\\\|\\=" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=?" end="?" skip="\\\\\|\\?" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=@" end="@" skip="\\\\\|\\@" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\\" end="\\"  contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\^" end="\^" skip="\\\\\|\\\^" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=`" end="`" skip="\\\\\|\\`" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=|" end="|" skip="\\\\\|\\|" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\~" end="\~" skip="\\\\\|\\\~" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\={" end="}" skip="\\\\\|\\}" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=<" end=">" skip="\\\\\|\\>" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=\[" end="\]" skip="\\\\\|\\\]" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="%[Qx]\=(" end=")" skip="\\\\\|\\)" contains=erubyExprSubst

" Normal String and Shell Command Output:
syn region erubyString matchgroup=erubyStringDelimit start="\"" end="\"" skip="\\\\\|\\\"" contains=erubyExprSubst
syn region erubyString matchgroup=erubyStringDelimit start="'" end="'" skip="\\\\\|\\'"
syn region erubyString matchgroup=erubyStringDelimit start="`" end="`" skip="\\\\\|\\`" contains=erubyExprSubst
"
" END Autogenerated Stuff
"

" Normal Regular Expression:
syn region  erubyString  matchgroup=erubyStringDelimit start="\<if\s*/"lc=2 start="[\~=!|&(,]\s*/"lc=1 end="/[iopx]*" skip="\\\\\|\\/" contains=erubyExprSubst

" Here Document:
syn region  erubyString matchgroup=erubyStringDelimit start=+<<-\(\u\{3,}\|'\u\{3,}'\|"\u\{3,}"\|`\u\{3,}`\)+hs=s+2 end=+^\s*\u\{3,}$+
syn region  erubyString matchgroup=erubyStringDelimit start=+<<-\(EOF\|'EOF'\|"EOF"\|`EOF`\)+hs=s+2 end=+^\s*EOF$+ contains=erubyExprSubst
syn region  erubyString matchgroup=erubyStringDelimit start=+<<-\(EOS\|'EOS'\|"EOS"\|`EOS`\)+hs=s+2 end=+^\s*EOS$+ contains=erubyExprSubst
syn region  erubyString matchgroup=erubyStringDelimit start=+<<\(\u\{3,}\|'\u\{3,}'\|"\u\{3,}"\|`\u\{3,}`\)+hs=s+2 end=+^\u\{3,}$+
syn region  erubyString matchgroup=erubyStringDelimit start=+<<\(EOF\|'EOF'\|"EOF"\|`EOF`\)+hs=s+2 end=+^EOF$+ contains=erubyExprSubst
syn region  erubyString matchgroup=erubyStringDelimit start=+<<\(EOS\|'EOS'\|"EOS"\|`EOS`\)+hs=s+2 end=+^EOS$+ contains=erubyExprSubst

" Expensive Mode: colorize *end* according to opening statement
if !exists("eruby_no_expensive")
  syn region  erubyFunction  matchgroup=erubyDefine start="^\s*def\s" matchgroup=NONE end="[?!]\|\>" skip="\.\|\(::\)" oneline
  syn region  erubyClassOrModule  matchgroup=erubyDefine start="^\s*\(class\|module\)\s" end="<\|$\|;"he=e-1 oneline
  syn region  erubyBlock  start="^\s*def\s\+"rs=s matchgroup=erubyDefine end="\<end\>" contains=ALLBUT,erubyExprSubst,erubyTodo nextgroup=erubyFunction
  syn region  erubyBlock  start="^\s*\(class\|module\)\>"rs=s matchgroup=erubyDefine end="\<end\>" contains=ALLBUT,erubyExprSubst,erubyTodo nextgroup=erubyClassOrModule
  " modifiers + redundant *do*
  syn match   erubyControl  "\<\(if\|unless\|while\|until\|do\)\>"
  " *do* requiring *end*
  syn region  erubyDoBlock  matchgroup=erubyControl start="\<do\>" end="\<end\>" contains=ALLBUT,erubyExprSubst,erubyTodo
  " statements without *do*
  syn region  erubyNoDoBlock  matchgroup=erubyControl start="\<\(case\|begin\)\>" start="^\s*\(if\|unless\)\>" start=";\s*\(if\|unless\)\>"hs=s+1 end="\<end\>" contains=ALLBUT,erubyExprSubst,erubyTodo
  " statement with optional *do*
  syn region  erubyOptDoBlock matchgroup=erubyControl start="\<for\>" start="^\s*\(while\|until\)\>" start=";\s*\(while\|until\)\>"hs=s+1 end="\<end\>" contains=ALLBUT,erubyExprSubst,erubyTodo,erubyDoBlock

  if !exists("eruby_minlines")
    let eruby_minlines = 50
  endif
  exec "syn sync minlines=" . eruby_minlines

else " not Expensive
  syn region  erubyFunction  matchgroup=erubyControl start="^\s*def\s" matchgroup=NONE end="[?!]\|\>" skip="\.\|\(::\)" oneline
  syn region  erubyClassOrModule  matchgroup=erubyControl start="^\s*\(class\|module\)\s" end="<\|$\|;"he=e-1 oneline
  syn keyword erubyControl case begin do for if unless while until end
endif " Expensive?

" Keywords:
syn keyword erubyControl  then else elsif when ensure rescue
syn keyword erubyControl  and or not in yield lambda proc loop
syn keyword erubyControl  break redo retry next return
syn match   erubyInclude  "^\s*include\>"
syn keyword erubyInclude  require
syn keyword erubyTodo  TODO FIXME XXX contained
syn keyword erubyBoolean  true false self nil
syn keyword erubyException  raise fail catch throw

" Comments: and Documentation
syn match   erubyComment  "#.*" contains=erubyTodo
syn match   erubySharpBang  "#!.*"
syn region  erubyDocumentation  start="^=begin" end="^=end.*$" contains=erubyTodo

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet
if version >= 508 || !exists("did_eruby_syntax_inits")
  if version < 508
    let did_eruby_syntax_inits = 1
    command -nargs=+ HiLink hi link <args>
  else
    command -nargs=+ HiLink hi def link <args>
  endif

  HiLink erubyDefine          Define
  HiLink erubyFunction        Function
  HiLink erubyControl         Statement
  HiLink erubyInclude         Include
  HiLink erubyNumber          Number
  HiLink erubyBoolean         Boolean
  HiLink erubyException       Exception
  HiLink erubyClassOrModule   Type
  HiLink erubyIdentifier      Special
  HiLink erubySharpBang       PreProc

  HiLink erubyString          String
  HiLink erubyStringDelimit   Delimiter
  HiLink erubyExprSubst       Special

  HiLink erubyComment         Comment
  HiLink erubyDocumentation   Comment
  HiLink erubyTodo            Todo

  delcommand HiLink
endif

let b:current_syntax = "eruby"
