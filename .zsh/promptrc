typeset -ga preexec_functions
typeset -ga precmd_functions
typeset -ga chpwd_functions
setopt prompt_subst
autoload -U colors && colors


# ANSI escapes for colors and attributes.
Black="%{[30m%}"
Blue="%{[34m%}"
Green="%{[32m%}"
Cyan="%{[36m%}"
Red="%{[31m%}"
Purple="%{[35m%}"
Brown="%{[33m%}"
Gray="%{[37m%}"
Norm="%{[0m%}"

N_LINE=236
C_LINE="%{[48;5;0;38;5;${N_LINE}m%}"
C_BRANCH_ICON="%{[38;5;246m%}"
C_BRANCH="%{[38;5;245;48;5;235m%}"
C_BRANCH_START="%{[38;5;235m%}"
C_PWD="%{[0;48;5;${N_LINE};38;5;254m%}"
C_TIME_START="%{[38;5;239m%}"
C_TIME="%{[38;5;250;48;5;239m%}"
C_LINE_START="%{[49;38;5;${N_LINE}m%}"
C_LINE_END="%{[49;38;5;${N_LINE}m%}"

Title="%{\e]2;%}%n@%m %~\a"

if [[ $UID -eq 0 ]]; then
	C_USER="%{[0;38;5;231;48;5;88m%}"
	C_USER_END="%{[1;38;5;88;48;5;${N_LINE}m%}"
else
	C_USER="%{[0;38;5;117;48;5;24m%}"
	C_USER_END="%{[1;38;5;24;48;5;${N_LINE}m%}"
fi

if [[ -z $SSH_CLIENT ]]; then
	USER_FMT="%n"
else
	USER_FMT="%n@%m"
fi


# Git branch support for prompts
# Based on: http://www.jukie.net/bart/blog/20080404105620
export __CURRENT_GIT_BRANCH=
export __CURRENT_GIT_VARS_INVALID=1

zsh_git_invalidate_vars() {
	export __CURRENT_GIT_VARS_INVALID=1
}

zsh_git_compute_vars() {
	export __CURRENT_GIT_BRANCH="$(parse_git_branch)"
	export __CURRENT_GIT_VARS_INVALID=
}

parse_git_branch() {
	git branch --no-color 2>/dev/null \
		| sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

preexec_functions+='zsh_preexec_update_git_vars'
zsh_preexec_update_git_vars() {
	case "$(history $HISTCMD)" in
		*git*)
			zsh_git_invalidate_vars
			;;
	esac
}

chpwd_functions+='zsh_chpwd_update_git_vars'
zsh_chpwd_update_git_vars() {
	zsh_git_invalidate_vars
}

get_git_prompt_info() {
	test -n "$__CURRENT_GIT_VARS_INVALID" && zsh_git_compute_vars
	if test ! -z $__CURRENT_GIT_BRANCH; then
		print "${C_BRANCH_START}â®‚${C_BRANCH} ${C_BRANCH_ICON}${__CURRENT_GIT_BRANCH} "
	fi
}


# A rather boring prompt.
#export PS1="%n@%m%# "

export PS1="${C_USER} ${USER_FMT} ${C_LINE}${C_USER_END}â®€ ${C_PWD}%4c ${C_LINE_END}â®€ %{$reset_color%}"

export RPROMPT='$(print "${C_LINE_START}$(get_git_prompt_info)${C_TIME_START}â®‚${C_TIME} %*-%L-%? "%{$reset_color%})'

export PS2="$(print "$Bold$Black#$Norm$PromptColor#$Bold$PromptColor#>$COLOR4 ")"


case $TERM in
    xterm*|Eterm)
		precmd () {print -Pn "\e]0;%n@%m: %~\a"}
		;;
esac


# vim:ft=zsh:
